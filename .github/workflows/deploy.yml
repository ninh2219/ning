name: Deploy site to GitHub Pages (no-heredoc)

on:
  push:
    branches: [ main ]
    paths:
      - 'debs/**'
      - 'ipa/**'
      - 'templates/**'
      - 'style.css'
      - 'CydiaIcon.png'
      - '.github/workflows/*.yml'
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  USE_CUSTOM_DOMAIN: 'false'   # đổi 'true' khi muốn tạo CNAME=repo.ninh.us

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev jq

      - name: Build site into ./out (copy templates)
        run: |
          set -euo pipefail
          rm -rf out && mkdir -p out/repo out/ipa

          # assets
          [ -f style.css ] && cp style.css out/ || true
          [ -f CydiaIcon.png ] && cp CydiaIcon.png out/ || true

          # === copy templates
          cp templates/_head.html out/_head.html
          cp templates/_nav.html  out/_nav.html
          cp templates/_foot.html out/_foot.html

          # === debs -> Packages
          if ls debs/*.deb >/dev/null 2>&1; then
            cp debs/*.deb out/repo/
          fi
          (cd out/repo && dpkg-scanpackages . /dev/null > Packages && gzip -fk Packages)

          # === IPA: copy, checksum, manifest, page
          if [ -d ipa ]; then cp -R ipa/. out/ipa/; fi
          mkdir -p out/ipa
          ( cd out/ipa
            if find . -type f -name '*.ipa' | grep -q .; then
              find . -type f -name '*.ipa' -print0 | xargs -0 sha256sum > SHA256SUMS
            else
              : > SHA256SUMS
            fi
            { echo '{ "items": ['; first=1
              while IFS= read -r -d '' f; do
                size=$(stat -c%s "$f" 2>/dev/null || stat -f%z "$f")
                sum=$(grep "  $f$" SHA256SUMS | awk '{print $1}')
                url="${f#./}"; file=$(basename "$f")
                [ $first -eq 0 ] && printf ',\n'; first=0
                printf '  { "file":%s,"size":%s,"sha256":%s,"url":%s }' \
                  "$(jq -Rn --arg v "$file" '$v')" \
                  "$size" \
                  "$(jq -Rn --arg v "$sum"  '$v')" \
                  "$(jq -Rn --arg v "$url"  '$v')"
              done < <(find . -type f -name '*.ipa' -print0 | sort -z)
              echo '] }'
            } > manifest.json

            cat > index.body <<'HTML'
            <main class="container my-4">
              <h1 class="h4">IPA Downloads</h1>
              <p class="text-muted">Danh sách .ipa — <a href="manifest.json">manifest.json</a></p>
              <div class="table-responsive"><table class="table table-sm table-striped">
                <thead><tr><th>Tên file</th><th>Kích thước</th><th>SHA256</th><th>Tải</th></tr></thead>
                <tbody id="tbody"><tr><td colspan="4">Đang tải…</td></tr></tbody>
              </table></div>
            </main>
            <script>
            async function main(){
              try{
                const res=await fetch('manifest.json',{cache:'no-store'}); const data=await res.json();
                const tbody=document.getElementById('tbody'); tbody.innerHTML='';
                if(!data.items.length){ tbody.innerHTML='<tr><td colspan="4"><em>Chưa có IPA.</em></td></tr>'; return; }
                for(const it of data.items){
                  const mb = it.size ? (it.size/1e6).toFixed(2)+' MB' : '';
                  const tr = document.createElement('tr');
                  tr.innerHTML = `<td class="text-break">${it.file||''}</td><td>${mb}</td><td class="text-break">${it.sha256||''}</td><td><a href="${it.url||it.file}">Download</a></td>`;
                  tbody.appendChild(tr);
                }
              }catch(e){ document.getElementById('tbody').innerHTML='<tr><td colspan="4"><em>Lỗi tải manifest.</em></td></tr>'; }
            } main();
            </script>
            HTML
            # wrap với head/nav/foot
            {
              echo '<!doctype html><html lang="vi"><head>'
              cat ../_head.html
              echo '<title>IPA Downloads · Ninh Repo</title></head><body>'
              cat ../_nav.html
              cat index.body
              cat ../_foot.html
              echo '</body></html>'
            } > index.html
            rm -f index.body
          )

          # === Manifest tổng (deb + ipa)
          ( cd out
            if find repo -maxdepth 1 -type f -name '*.deb' | grep -q .; then
              (cd repo && sha256sum *.deb > SHA256SUMS)
            else
              : > repo/SHA256SUMS || true
            fi

            PACK=repo/Packages; touch "$PACK"
            { echo '{ "items": ['; first=1
              # IPA
              if [ -d ipa ]; then
                while IFS= read -r -d '' f; do
                  size=$(stat -c%s "ipa/$f" 2>/dev/null || stat -f%z "ipa/$f")
                  sum=$( (cd ipa && grep "  ./$f$" SHA256SUMS | awk '{print $1}') )
                  url="ipa/$f"; file=$(basename "$f")
                  catg="${f%/*}"; [ "$catg" = "$f" ] && catg="uncategorized" || catg="${catg##*/}"
                  [ $first -eq 0 ] && printf ',\n'; first=0
                  printf '  { "type":"ipa","category":%s,"file":%s,"size":%s,"sha256":%s,"url":%s }' \
                    "$(jq -Rn --arg v "$catg" '$v')" \
                    "$(jq -Rn --arg v "$file" '$v')" \
                    "$size" \
                    "$(jq -Rn --arg v "$sum"  '$v')" \
                    "$(jq -Rn --arg v "$url"  '$v')"
                done < <(cd ipa && find . -type f -name '*.ipa' -printf '%P\0' | sort -z)
              fi
              # DEB (từ Packages)
              awk -v RS='' '{
                pkg=""; ver=""; arch=""; file=""; size="";
                n=split($0, a, /\n/);
                for(i=1;i<=n;i++){
                  split(a[i], kv, ": "); k=kv[1]; v=substr(a[i], index(a[i],": ")+2);
                  if(k=="Package") pkg=v; else if(k=="Version") ver=v;
                  else if(k=="Architecture") arch=v; else if(k=="Filename") file=v; else if(k=="Size") size=v;
                }
                if(file!=""){ printf "PKG\t%s\t%s\t%s\t%s\t%s\n", pkg, ver, arch, size, file; }
              }' "$PACK" | while IFS=$'\t' read -r _ pkg ver arch size file; do
                [ -f "$file" ] || continue
                sum=$( (cd repo && grep "  $(basename "$file")$" SHA256SUMS | awk '{print $1}') )
                [ $first -eq 0 ] && printf ',\n'; first=0
                printf '  { "type":"deb","package":%s,"version":%s,"arch":%s,"size":%s,"sha256":%s,"url":%s,"file":%s }' \
                  "$(jq -Rn --arg v "$pkg" '$v')" \
                  "$(jq -Rn --arg v "$ver" '$v')" \
                  "$(jq -Rn --arg v "$arch" '$v')" \
                  "$size" \
                  "$(jq -Rn --arg v "$sum"  '$v')" \
                  "$(jq -Rn --arg v "$file" '$v')" \
                  "$(jq -Rn --arg v "$(basename "$file")" '$v')"
              done
              echo '] }'
            } > manifest.json
          )

          # === index.html
          cat > out/index.body <<'HTML'
          <header class="py-5 bg-light border-bottom">
            <div class="container">
              <h1 class="display-6 fw-bold">Kho APT Repo của Ninh</h1>
              <p class="lead">Tuyển tập deb/ipa cho iOS cổ.</p>
            </div>
          </header>
          <main class="container my-5">
            <div class="row g-4">
              <div class="col-md-6"><div class="card h-100 shadow-sm"><div class="card-body d-flex flex-column">
                <h5 class="card-title">Tweaks (DEB)</h5>
                <p class="text-muted mb-3">Xem danh sách gói từ Packages.</p>
                <div class="mt-auto"><a class="btn btn-primary me-2" href="packages.html">Open viewer</a>
                <a class="btn btn-outline-secondary" href="repo/Packages">Raw Packages</a></div>
              </div></div></div>
              <div class="col-md-6"><div class="card h-100 shadow-sm"><div class="card-body d-flex flex-column">
                <h5 class="card-title">IPA</h5>
                <p class="text-muted mb-3">Tải IPA (checksum & manifest).</p>
                <div class="mt-auto"><a class="btn btn-success me-2" href="ipa/">Browse IPA</a>
                <a class="btn btn-outline-secondary" href="ipa/manifest.json">Manifest</a></div>
              </div></div></div>
            </div>
          </main>
          HTML

          {
            echo '<!doctype html><html lang="vi"><head>'
            cat out/_head.html
            echo '<title>Ninh Repo</title></head><body>'
            cat out/_nav.html
            cat out/index.body
            cat out/_foot.html
            echo '</body></html>'
          } > out/index.html
          rm -f out/index.body

          # === packages.html (viewer)
          cat > out/packages.body <<'HTML'
          <main class="container my-4">
            <h1 class="h4 mb-3">Packages</h1>
            <div id="status" class="mb-3 text-muted">Đang tải…</div>
            <div class="table-responsive">
              <table class="table table-sm table-striped">
                <thead><tr><th>Package</th><th>Version</th><th>Arch</th><th>Size</th><th>Description</th><th>File</th></tr></thead>
                <tbody id="pkgBody"><tr><td colspan="6">Đang tải…</td></tr></tbody>
              </table>
            </div>
          </main>
          <script>
          const PACKAGES_PATH='repo/Packages';
          async function loadPackages(){
            const body=document.getElementById('pkgBody'); const status=document.getElementById('status');
            try{
              const text=await (await fetch(PACKAGES_PATH,{cache:'no-store'})).text();
              status.textContent='OK';
              const blocks=text.split(/\n\n+/).map(s=>s.trim()).filter(Boolean);
              const rows=[];
              for(const b of blocks){
                const m={}; for(const line of b.split('\n')){ const i=line.indexOf(':'); if(i>0){ m[line.slice(0,i).trim()]=line.slice(i+1).trim(); } }
                rows.push(`<tr><td>${m.Package||''}</td><td>${m.Version||''}</td><td>${m.Architecture||''}</td><td>${m.Size||''}</td><td>${m.Description||''}</td><td>${m.Filename?`<a href="${m.Filename}">.deb</a>`:''}</td></tr>`);
              }
              body.innerHTML=rows.join('')||'<tr><td colspan="6"><em>Chưa có gói.</em></td></tr>';
            }catch(e){
              status.textContent='Lỗi: '+e.message;
              body.innerHTML='<tr><td colspan="6"><em>Không đọc được Packages.</em></td></tr>';
            }
          }
          loadPackages();
          </script>
          HTML

          {
            echo '<!doctype html><html lang="vi"><head>'
            cat out/_head.html
            echo '<title>Packages Viewer</title></head><body>'
            cat out/_nav.html
            cat out/packages.body
            cat out/_foot.html
            echo '</body></html>'
          } > out/packages.html
          rm -f out/packages.body

          # === flags cuối
          touch out/.nojekyll
          if [ "${USE_CUSTOM_DOMAIN}" = "true" ]; then echo "repo.ninh.us" > out/CNAME; fi

          echo "==== OUT TREE ====" && ls -R out

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
