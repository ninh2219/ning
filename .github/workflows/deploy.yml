name: Deploy site to GitHub Pages (with Search)

on:
  push:
    branches: [ main ]
    paths:
      - 'debs/**'
      - 'ipa/**'
      - 'templates/**'
      - 'style.css'
      - 'CydiaIcon.png'
      - '.github/workflows/*.yml'
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  USE_CUSTOM_DOMAIN: 'false'   # đổi 'true' để ghi CNAME=repo.ninh.us

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev jq

      - name: Build site into ./out (templates + search)
        run: |
          set -euo pipefail
          rm -rf out && mkdir -p out/repo out/ipa

          # assets
          [ -f style.css ] && cp style.css out/
          [ -f CydiaIcon.png ] && cp CydiaIcon.png out/

          # templates -> out
          cp templates/_head.html out/_head.html
          cp templates/_nav.html  out/_nav.html
          cp templates/_foot.html out/_foot.html

          # --- debs -> Packages(.gz)
          if ls debs/*.deb >/dev/null 2>&1; then
            cp debs/*.deb out/repo/
          fi
          (cd out/repo && dpkg-scanpackages . /dev/null > Packages && gzip -fk Packages)

          # --- IPA: copy + manifest + page
          if [ -d ipa ]; then cp -R ipa/. out/ipa/; fi
          mkdir -p out/ipa
          ( cd out/ipa
            if find . -type f -name '*.ipa' | grep -q .; then
              find . -type f -name '*.ipa' -print0 | xargs -0 sha256sum > SHA256SUMS
            else
              : > SHA256SUMS
            fi
            { echo '{ "items": ['; first=1
              while IFS= read -r -d '' f; do
                size=$(stat -c%s "$f" 2>/dev/null || stat -f%z "$f")
                sum=$(grep "  $f$" SHA256SUMS | awk '{print $1}')
                url="${f#./}"; file=$(basename "$f")
                [ $first -eq 0 ] && printf ',\n'; first=0
                printf '  { "file":%s,"size":%s,"sha256":%s,"url":%s }' \
                  "$(jq -Rn --arg v "$file" '$v')" \
                  "$size" \
                  "$(jq -Rn --arg v "$sum"  '$v')" \
                  "$(jq -Rn --arg v "$url"  '$v')"
              done < <(find . -type f -name '*.ipa' -print0 | sort -z)
              echo '] }'
            } > manifest.json

            # ipa/index.html
            cat ../_head.html > ../_head.tmp
            echo '<title>IPA Downloads · Ninh Repo</title>' >> ../_head.tmp
            {
              echo '<!doctype html><html lang="vi"><head>'
              cat ../_head.tmp
              echo '</head><body>'
              cat ../_nav.html
              cat ../../templates/ipa.body.html
              cat ../_foot.html
              echo '</body></html>'
            } > index.html
            rm -f ../_head.tmp
          )

          # --- Manifest tổng (deb + ipa)
          ( cd out
            if find repo -maxdepth 1 -type f -name '*.deb' | grep -q .; then
              (cd repo && sha256sum *.deb > SHA256SUMS)
            else
              : > repo/SHA256SUMS || true
            fi
            PACK=repo/Packages; touch "$PACK"
            { echo '{ "items": ['; first=1
              # IPA
              if [ -d ipa ]; then
                while IFS= read -r -d '' f; do
                  size=$(stat -c%s "ipa/$f" 2>/dev/null || stat -f%z "ipa/$f")
                  sum=$( (cd ipa && grep "  ./$f$" SHA256SUMS | awk '{print $1}') )
                  url="ipa/$f"; file=$(basename "$f")
                  catg="${f%/*}"; [ "$catg" = "$f" ] && catg="uncategorized" || catg="${catg##*/}"
                  [ $first -eq 0 ] && printf ',\n'; first=0
                  printf '  { "type":"ipa","category":%s,"file":%s,"size":%s,"sha256":%s,"url":%s }' \
                    "$(jq -Rn --arg v "$catg" '$v')" \
                    "$(jq -Rn --arg v "$file" '$v')" \
                    "$size" \
                    "$(jq -Rn --arg v "$sum"  '$v')" \
                    "$(jq -Rn --arg v "$url"  '$v')"
                done < <(cd ipa && find . -type f -name '*.ipa' -printf '%P\0' | sort -z)
              fi
              # DEB (đọc từ Packages)
              awk -v RS='' '{
                pkg=""; ver=""; arch=""; file=""; size="";
                n=split($0, a, /\n/);
                for(i=1;i<=n;i++){
                  split(a[i], kv, ": "); k=kv[1]; v=substr(a[i], index(a[i],": ")+2);
                  if(k=="Package") pkg=v; else if(k=="Version") ver=v;
                  else if(k=="Architecture") arch=v; else if(k=="Filename") file=v; else if(k=="Size") size=v;
                }
                if(file!=""){ printf "PKG\t%s\t%s\t%s\t%s\t%s\n", pkg, ver, arch, size, file; }
              }' "$PACK" | while IFS=$'\t' read -r _ pkg ver arch size file; do
                [ -f "$file" ] || continue
                sum=$( (cd repo && grep "  $(basename "$file")$" SHA256SUMS | awk '{print $1}') )
                [ $first -eq 0 ] && printf ',\n'; first=0
                printf '  { "type":"deb","package":%s,"version":%s,"arch":%s,"size":%s,"sha256":%s,"url":%s,"file":%s }' \
                  "$(jq -Rn --arg v "$pkg" '$v')" \
                  "$(jq -Rn --arg v "$ver" '$v')" \
                  "$(jq -Rn --arg v "$arch" '$v')" \
                  "$size" \
                  "$(jq -Rn --arg v "$sum"  '$v')" \
                  "$(jq -Rn --arg v "$file" '$v')" \
                  "$(jq -Rn --arg v "$(basename "$file")" '$v')"
              done
              echo '] }'
            } > manifest.json
          )

          # --- index.html
          cat out/_head.html > out/_head.tmp
          echo '<title>Ninh Repo</title>' >> out/_head.tmp
          {
            echo '<!doctype html><html lang="vi"><head>'
            cat out/_head.tmp
            echo '</head><body>'
            cat out/_nav.html
            cat templates/index.body.html
            cat out/_foot.html
            echo '</body></html>'
          } > out/index.html
          rm -f out/_head.tmp

          # --- packages.html
          cat out/_head.html > out/_head.tmp
          echo '<title>Packages Viewer</title>' >> out/_head.tmp
          {
            echo '<!doctype html><html lang="vi"><head>'
            cat out/_head.tmp
            echo '</head><body>'
            cat out/_nav.html
            cat templates/packages.body.html
            cat out/_foot.html
            echo '</body></html>'
          } > out/packages.html
          rm -f out/_head.tmp

          # --- search.html  (THÊM MỚI)
          cat out/_head.html > out/_head.tmp
          echo '<title>Search</title>' >> out/_head.tmp
          {
            echo '<!doctype html><html lang="vi"><head>'
            cat out/_head.tmp
            echo '</head><body>'
            cat out/_nav.html
            cat templates/search.body.html
            cat out/_foot.html
            echo '</body></html>'
          } > out/search.html
          rm -f out/_head.tmp

          # flags cuối
          touch out/.nojekyll
          if [ "${USE_CUSTOM_DOMAIN}" = "true" ]; then echo "repo.ninh.us" > out/CNAME; fi

          echo "==== OUT TREE ===="
          ls -R out

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
